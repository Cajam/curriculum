Thursday

>> Objects & DOM

Rubber Duckie Pair Programming.

JSpattern: using boolean flags to keep track of items you need to keep track of every other time.

converting int to split array is a subproblem and not really important when compared to
understanding that you need to convert something TO the array and understanding the why of the program flow itself.

two ways to find properties because anytime you have a key that has illegal JS characters inthe keyword and it
covers for that because you can access it as a string instead.

Object Creation :
1.Object Intializer :var obj = {}
2.Object Constructor : function car(this.type){ this.type = type }

relation of the function to the mathmatical black box
where there is only ONE I/O .

reason why is called side effects because it isn't reliable
as opposed to the fact you are garunteed to be returned a value.

understanding difference between referencing
and executing a function and how that changes how you
can interact with it. important to know what is
returned and not .


var car = {
  make:"Delorian",
  fluxCapacitor:true,
  timeTravel: delorianCar()
  }


function delorianCar(){
    console.log("DoRizzo!");
  }
car.timeTravel();
>> so then why doesn't this work? it returns a error
"TypeError: undefined is not a function (evaluating 'car.timeTravel()')"

because it sees timeTravel to evaluate delorianCar() in the value itself
but there is nothing right there so it automatically evaluates
to "undefined"

DOM
just a programming interface which alls us to use
JS to alter HTML

document.body.children[2].children
  >>this is very ineff. because the HTML might be
  changing so instead need a better way for
  DOM traversal.

issue with .onclick is that it only allow you to
really do one thing with it's activation

object.addEventListener("event",function reference[no()])

specificity calculator -- check lesson plan itself
